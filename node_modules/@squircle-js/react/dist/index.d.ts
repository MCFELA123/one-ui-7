import { PropsWithChildren, ComponentPropsWithoutRef } from 'react';

declare const SquircleNoScript: () => JSX.Element;

type StaticSquircleProps = {
    asChild?: boolean;
    width: number;
    height: number;
    cornerRadius: number;
    cornerSmoothing: number;
};
declare const StaticSquircle: ({ asChild, width, height, cornerRadius, cornerSmoothing, style, ...props }: PropsWithChildren<StaticSquircleProps & ComponentPropsWithoutRef<"div">>) => JSX.Element;

interface SquircleProps<E extends React.ElementType> {
    cornerSmoothing?: number;
    cornerRadius?: number;
    asChild?: boolean;
    children?: React.ReactNode;
    width?: number;
    height?: number;
    defaultWidth?: number;
    defaultHeight?: number;
}
declare function Squircle<E extends React.ElementType = "div">({ cornerRadius, cornerSmoothing, asChild, style, width: w, height: h, defaultWidth, defaultHeight, ...props }: SquircleProps<E> & Omit<React.ComponentPropsWithoutRef<E>, keyof SquircleProps<E>>): JSX.Element;

export { Squircle, SquircleNoScript, SquircleProps, StaticSquircle };
